{"ast":null,"code":"export const create = (userId, token, post) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/post/new/${userId}`, {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: post\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(\"this is \", err));\n};\nexport const list = () => {\n  return fetch(`${process.env.REACT_APP_API_URL}/posts`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const singlePost = postId => {\n  return fetch(`${process.env.REACT_APP_API_URL}/post/${postId}`, {\n    method: \"GET\"\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const remove = (postId, token) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/post/${postId}`, {\n    method: \"DELETE\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const listByUser = (userId, token) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/posts/by/${userId}`, {\n    method: \"GET\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    }\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const update = (postId, token, post) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/post/${postId}`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: post\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};\nexport const like = (userId, token, postId) => {\n  return fetch(`${process.env.REACT_APP_API_URL}/post/like`, {\n    method: \"PUT\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\",\n      Authorization: `Bearer ${token}`\n    },\n    body: JSON.stringify({\n      userId,\n      postId\n    })\n  }).then(response => {\n    return response.json();\n  }).catch(err => console.log(err));\n};","map":{"version":3,"sources":["/Users/yati/Desktop/react/react-front/src/post/apiPost.js"],"names":["create","userId","token","post","fetch","process","env","REACT_APP_API_URL","method","headers","Accept","Authorization","body","then","response","json","catch","err","console","log","list","singlePost","postId","remove","listByUser","update","like","JSON","stringify"],"mappings":"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","sourcesContent":["\nexport const create=(userId,token,post)=>{\n    return fetch (`${process.env.REACT_APP_API_URL}/post/new/${userId}`,{\n        method:\"POST\",\n        headers:{\n            Accept:\"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n    body: post \n}\n    ).then(response =>{\n        return response.json();\n    })\n    .catch(err => console.log(\"this is \",err))\n}\n\n\nexport const list=()=>{\n\n    return fetch (`${process.env.REACT_APP_API_URL}/posts`,{\n        method:\"GET\"\n    })\n    .then(response => {\n        return response.json();})\n    .catch(err => console.log(err))\n}\n\nexport const singlePost=(postId)=>{\n\n    return fetch (`${process.env.REACT_APP_API_URL}/post/${postId}`,{\n        method:\"GET\"\n    })\n    .then(response => {\n        return response.json();})\n    .catch(err => console.log(err))\n}\nexport const remove = (postId, token) => {\n    return fetch(`${process.env.REACT_APP_API_URL}/post/${postId}`, {\n        method: \"DELETE\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        }\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\nexport const listByUser=(userId,token)=>{\n\n    return fetch (`${process.env.REACT_APP_API_URL}/posts/by/${userId}`,{\n        method:\"GET\",\n        headers:{\n            Accept:\"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n    })\n    .then(response => {\n        return response.json();})\n    .catch(err => console.log(err))\n}\n\nexport const update = (postId, token, post) => {\n\n    return fetch(`${process.env.REACT_APP_API_URL}/post/${postId}`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: post\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n\n\nexport const like = (userId, token, postId) => {\n\n    return fetch(`${process.env.REACT_APP_API_URL}/post/like`, {\n        method: \"PUT\",\n        headers: {\n            Accept: \"application/json\",\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${token}`\n        },\n        body: JSON.stringify({userId,postId})\n    })\n        .then(response => {\n            return response.json();\n        })\n        .catch(err => console.log(err));\n};\n\n"]},"metadata":{},"sourceType":"module"}