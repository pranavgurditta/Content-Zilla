{"ast":null,"code":"var _jsxFileName = \"/Users/yati/Desktop/react/react-front/src/user/EditProfile.js\";\nimport React, { Component } from 'react';\nimport { read } from \"./apiUser\";\nimport { isAuthenticated } from \"../auth\";\nimport { Redirect } from \"react-router-dom\";\nimport { update } from \"./apiUser\";\n\nclass EditProfile extends Component {\n  constructor() {\n    super();\n\n    this.signupForm = (name, email, password) => /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 45\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, \"Name\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange(\"name\"),\n      value: name,\n      type: \"text\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange(\"email\"),\n      value: email,\n      type: \"email\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }\n    }, \"Password\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange(\"password\"),\n      value: password,\n      type: \"password\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.clickSubmit,\n      className: \"btn btn-raised btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }\n    }, \"UPDATE\"));\n\n    this.handleChange = name => event => {\n      this.setState({\n        [name]: event.target.value\n      } //name has valuer of name,email and passeword\n      );\n    };\n\n    this.clickSubmit = event => {\n      event.preventDefault(); // prevents page reloaad\n\n      const {\n        name,\n        email,\n        password\n      } = this.state;\n      const user = {\n        name: name,\n        email: email,\n        password: password\n      };\n      const userId = this.props.match.params.userId;\n      const token = isAuthenticated().token;\n      update(userId, token, user).then(data => {\n        if (data.error) {\n          this.setState({\n            error: data.error\n          });\n        } else {\n          this.setState({\n            redirectToProfile: true\n          });\n        }\n      });\n    };\n\n    this.init = userId => {\n      const token = isAuthenticated().token;\n      read(userId, token).then(data => {\n        if (data.error) {\n          this.setState({\n            redirectToSignin: true\n          });\n        } else {\n          this.setState({\n            id: data._id,\n            name: data.name,\n            email: data.email\n          });\n        }\n      });\n    };\n\n    this.state = {\n      id: \"\",\n      name: \"\",\n      email: \"\",\n      password: \"\",\n      error: \"\",\n      redirectToProfile: false\n    };\n  }\n\n  componentDidMount() {\n    const userId = this.props.match.params.userId;\n    this.init(userId);\n  }\n\n  render() {\n    const {\n      name,\n      email,\n      password,\n      id,\n      redirectToProfile\n    } = this.state;\n\n    if (redirectToProfile) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: `/user/${id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mt-5 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 15\n      }\n    }, \"Profile\"), this.signupForm(name, email, password));\n  }\n\n}\n\nexport default EditProfile;","map":{"version":3,"sources":["/Users/yati/Desktop/react/react-front/src/user/EditProfile.js"],"names":["React","Component","read","isAuthenticated","Redirect","update","EditProfile","constructor","signupForm","name","email","password","handleChange","clickSubmit","event","setState","target","value","preventDefault","state","user","userId","props","match","params","token","then","data","error","redirectToProfile","init","redirectToSignin","id","_id","componentDidMount","render"],"mappings":"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","sourcesContent":["import React,{Component} from 'react'\nimport {read} from \"./apiUser\"\nimport {isAuthenticated} from \"../auth\"\nimport {Redirect} from \"react-router-dom\"\nimport {update} from \"./apiUser\"\nclass EditProfile extends Component{\n    constructor()\n    {\n        super()\n        this.state={\n            id:\"\",\n            name:\"\",\n            email:\"\",\n            password:\"\",\n            error:\"\",\n            redirectToProfile:false\n        }\n    }\n    signupForm=(name,email,password)=> (    <form> \n        <div className=\"form-group\">\n                <label className=\"text-muted\">Name</label>\n                <input onChange={this.handleChange(\"name\")}  value={name} type=\"text\" className=\"form-control\"/>\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Email</label>\n                <input onChange={this.handleChange(\"email\")} value={email}  type=\"email\" className=\"form-control\"/>\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Password</label>\n                <input onChange={this.handleChange(\"password\")} value={password}  type=\"password\" className=\"form-control\"/>\n            </div>\n          \n            \n            <button onClick={this.clickSubmit}className=\"btn btn-raised btn-primary\">UPDATE</button>\n        </form>\n)    \n\n\n\nhandleChange=(name)=> (event) => {\n    \n    this.setState(\n    {[name]:event.target.value} //name has valuer of name,email and passeword\n    )\n\n}\n\n clickSubmit=event =>{\n     event.preventDefault()// prevents page reloaad\n     const {name,email,password}=this.state;\n     const user={\n         name:name,\n         email:email,\n         password:password\n     };\n     const userId=this.props.match.params.userId;\n     const token=isAuthenticated().token;\n\n     update(userId,token,user)\n        .then(data=>{\n            if(data.error)\n            {\n                this.setState({error: data.error});\n              \n            }\n            else{\n                this.setState({\n                \n                    redirectToProfile:true\n                })\n            }\n        })\n        \n    }\n    \n\n    init =(userId) =>{\n        const token=isAuthenticated().token\n        read(userId,token)\n        .then(data =>{\n            if(data.error){\n                this.setState({\n                    redirectToSignin:true\n                })\n            }\n            else{\n                this.setState({id: data._id,name:data.name,email:data.email})\n            }\n        });\n    }\n    \n\n    componentDidMount()\n    {\n        const userId=this.props.match.params.userId;\n        this.init(userId);\n    }  \n    render(){\n        const{name,email,password,id,redirectToProfile}=this.state;\n        if(redirectToProfile){\n            return <Redirect to={`/user/${id}`} />\n        }\n\n        return(\n            <div className=\"container\">\n\n              <h2 className=\"mt-5 mb-5\">Profile</h2>\n              {this.signupForm(name,email,password)}\n            </div>\n        )\n    }\n}\nexport default EditProfile"]},"metadata":{},"sourceType":"module"}