{"ast":null,"code":"var _jsxFileName = \"/Users/yati/Desktop/react/react-front/src/post/EditPost.js\";\nimport React, { Component } from \"react\";\nimport { singlePost, update } from \"./apiPost\";\nimport { isAuthenticated } from \"../auth\";\nimport { Redirect } from \"react-router-dom\";\nimport DefaultPost from \"../images/avatar.jpg\";\n\nclass EditPost extends Component {\n  constructor() {\n    super();\n\n    this.init = postId => {\n      singlePost(postId).then(data => {\n        if (data.error) {\n          this.setState({\n            redirectToProfile: true\n          });\n        } else {\n          this.setState({\n            id: data.postedBy._id,\n            title: data.title,\n            body: data.body,\n            error: \"\"\n          });\n        }\n      });\n    };\n\n    this.isValid = () => {\n      const {\n        title,\n        body,\n        fileSize\n      } = this.state;\n\n      if (fileSize > 1000000) {\n        this.setState({\n          error: \"File size should be less than 100kb\",\n          loading: false\n        });\n        return false;\n      }\n\n      if (title.length === 0 || body.length === 0) {\n        this.setState({\n          error: \"All fields are required\",\n          loading: false\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        error: \"\"\n      });\n      const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n      const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n      this.postData.set(name, value);\n      this.setState({\n        [name]: value,\n        fileSize\n      });\n    };\n\n    this.clickSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      if (this.isValid()) {\n        const postId = this.props.match.params.postId;\n        const token = isAuthenticated().token;\n        update(postId, token, this.postData).then(data => {\n          if (data.error) this.setState({\n            error: data.error\n          });else {\n            this.setState({\n              loading: false,\n              title: \"\",\n              body: \"\",\n              redirectToProfile: true\n            });\n          }\n        });\n      }\n    };\n\n    this.editPostForm = (title, body) => /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }\n    }, \"Post Photo\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange(\"photo\"),\n      type: \"file\",\n      accept: \"image/*\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange(\"title\"),\n      type: \"text\",\n      className: \"form-control\",\n      value: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 17\n      }\n    }, \"Body\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      onChange: this.handleChange(\"body\"),\n      type: \"text\",\n      className: \"form-control\",\n      value: body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.clickSubmit,\n      className: \"btn btn-raised btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 13\n      }\n    }, \"Update Post\"));\n\n    this.state = {\n      id: \"\",\n      title: \"\",\n      body: \"\",\n      redirectToProfile: false,\n      error: \"\",\n      fileSize: 0,\n      loading: false\n    };\n  }\n\n  componentDidMount() {\n    this.postData = new FormData();\n    const postId = this.props.match.params.postId;\n    this.init(postId);\n  }\n\n  render() {\n    const {\n      id,\n      title,\n      body,\n      redirectToProfile,\n      error,\n      loading\n    } = this.state;\n\n    if (redirectToProfile) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: `/user/${isAuthenticated().user._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mt-5 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 17\n      }\n    }, title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }\n    }, error), loading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 25\n      }\n    }, \"Loading...\")) : \"\", /*#__PURE__*/React.createElement(\"img\", {\n      style: {\n        height: \"200px\",\n        width: \"auto\"\n      },\n      className: \"img-thumbnail\",\n      src: `${process.env.REACT_APP_API_URL}/post/photo/${id}`,\n      onError: i => i.target.src = `${DefaultPost}`,\n      alt: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }\n    }), this.editPostForm(title, body));\n  }\n\n}\n\nexport default EditPost;","map":{"version":3,"sources":["/Users/yati/Desktop/react/react-front/src/post/EditPost.js"],"names":["React","Component","singlePost","update","isAuthenticated","Redirect","DefaultPost","EditPost","constructor","init","postId","then","data","error","setState","redirectToProfile","id","postedBy","_id","title","body","isValid","fileSize","state","loading","length","handleChange","name","event","value","target","files","size","postData","set","clickSubmit","preventDefault","props","match","params","token","editPostForm","componentDidMount","FormData","render","user","display","height","width","process","env","REACT_APP_API_URL","i","src"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,UAAT,EAAqBC,MAArB,QAAmC,WAAnC;AACA,SAASC,eAAT,QAAgC,SAAhC;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;;AAEA,MAAMC,QAAN,SAAuBN,SAAvB,CAAiC;AAC7BO,EAAAA,WAAW,GAAG;AACV;;AADU,SAadC,IAbc,GAaPC,MAAM,IAAI;AACbR,MAAAA,UAAU,CAACQ,MAAD,CAAV,CAAmBC,IAAnB,CAAwBC,IAAI,IAAI;AAC5B,YAAIA,IAAI,CAACC,KAAT,EAAgB;AACZ,eAAKC,QAAL,CAAc;AAAEC,YAAAA,iBAAiB,EAAE;AAArB,WAAd;AACH,SAFD,MAEO;AACH,eAAKD,QAAL,CAAc;AACVE,YAAAA,EAAE,EAAEJ,IAAI,CAACK,QAAL,CAAcC,GADR;AAEVC,YAAAA,KAAK,EAAEP,IAAI,CAACO,KAFF;AAGVC,YAAAA,IAAI,EAAER,IAAI,CAACQ,IAHD;AAIVP,YAAAA,KAAK,EAAE;AAJG,WAAd;AAMH;AACJ,OAXD;AAYH,KA1Ba;;AAAA,SAkCdQ,OAlCc,GAkCJ,MAAM;AACZ,YAAM;AAAEF,QAAAA,KAAF;AAASC,QAAAA,IAAT;AAAeE,QAAAA;AAAf,UAA4B,KAAKC,KAAvC;;AACA,UAAID,QAAQ,GAAG,OAAf,EAAwB;AACpB,aAAKR,QAAL,CAAc;AACVD,UAAAA,KAAK,EAAE,qCADG;AAEVW,UAAAA,OAAO,EAAE;AAFC,SAAd;AAIA,eAAO,KAAP;AACH;;AACD,UAAIL,KAAK,CAACM,MAAN,KAAiB,CAAjB,IAAsBL,IAAI,CAACK,MAAL,KAAgB,CAA1C,EAA6C;AACzC,aAAKX,QAAL,CAAc;AAAED,UAAAA,KAAK,EAAE,yBAAT;AAAoCW,UAAAA,OAAO,EAAE;AAA7C,SAAd;AACA,eAAO,KAAP;AACH;;AACD,aAAO,IAAP;AACH,KAhDa;;AAAA,SAkDdE,YAlDc,GAkDCC,IAAI,IAAIC,KAAK,IAAI;AAC5B,WAAKd,QAAL,CAAc;AAAED,QAAAA,KAAK,EAAE;AAAT,OAAd;AACA,YAAMgB,KAAK,GACPF,IAAI,KAAK,OAAT,GAAmBC,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAnB,GAA2CH,KAAK,CAACE,MAAN,CAAaD,KAD5D;AAGA,YAAMP,QAAQ,GAAGK,IAAI,KAAK,OAAT,GAAmBC,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,EAAsBC,IAAzC,GAAgD,CAAjE;AACA,WAAKC,QAAL,CAAcC,GAAd,CAAkBP,IAAlB,EAAwBE,KAAxB;AACA,WAAKf,QAAL,CAAc;AAAE,SAACa,IAAD,GAAQE,KAAV;AAAiBP,QAAAA;AAAjB,OAAd;AACH,KA1Da;;AAAA,SA4Dda,WA5Dc,GA4DAP,KAAK,IAAI;AACnBA,MAAAA,KAAK,CAACQ,cAAN;AACA,WAAKtB,QAAL,CAAc;AAAEU,QAAAA,OAAO,EAAE;AAAX,OAAd;;AAEA,UAAI,KAAKH,OAAL,EAAJ,EAAoB;AAChB,cAAMX,MAAM,GAAG,KAAK2B,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwB7B,MAAvC;AACA,cAAM8B,KAAK,GAAGpC,eAAe,GAAGoC,KAAhC;AAEArC,QAAAA,MAAM,CAACO,MAAD,EAAS8B,KAAT,EAAgB,KAAKP,QAArB,CAAN,CAAqCtB,IAArC,CAA0CC,IAAI,IAAI;AAC9C,cAAIA,IAAI,CAACC,KAAT,EAAgB,KAAKC,QAAL,CAAc;AAAED,YAAAA,KAAK,EAAED,IAAI,CAACC;AAAd,WAAd,EAAhB,KACK;AACD,iBAAKC,QAAL,CAAc;AACVU,cAAAA,OAAO,EAAE,KADC;AAEVL,cAAAA,KAAK,EAAE,EAFG;AAGVC,cAAAA,IAAI,EAAE,EAHI;AAIVL,cAAAA,iBAAiB,EAAE;AAJT,aAAd;AAMH;AACJ,SAVD;AAWH;AACJ,KAhFa;;AAAA,SAkFd0B,YAlFc,GAkFC,CAACtB,KAAD,EAAQC,IAAR,kBACX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AACI,MAAA,QAAQ,EAAE,KAAKM,YAAL,CAAkB,OAAlB,CADd;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,MAAM,EAAC,SAHX;AAII,MAAA,SAAS,EAAC,cAJd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CADJ,eAUI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAEI;AACI,MAAA,QAAQ,EAAE,KAAKA,YAAL,CAAkB,OAAlB,CADd;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,SAAS,EAAC,cAHd;AAII,MAAA,KAAK,EAAEP,KAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAVJ,eAoBI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAO,MAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,MAAA,QAAQ,EAAE,KAAKO,YAAL,CAAkB,MAAlB,CADd;AAEI,MAAA,IAAI,EAAC,MAFT;AAGI,MAAA,SAAS,EAAC,cAHd;AAII,MAAA,KAAK,EAAEN,IAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CApBJ,eA8BI;AACI,MAAA,OAAO,EAAE,KAAKe,WADlB;AAEI,MAAA,SAAS,EAAC,4BAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBA9BJ,CAnFU;;AAEV,SAAKZ,KAAL,GAAa;AACTP,MAAAA,EAAE,EAAE,EADK;AAETG,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITL,MAAAA,iBAAiB,EAAE,KAJV;AAKTF,MAAAA,KAAK,EAAE,EALE;AAMTS,MAAAA,QAAQ,EAAE,CAND;AAOTE,MAAAA,OAAO,EAAE;AAPA,KAAb;AASH;;AAiBDkB,EAAAA,iBAAiB,GAAG;AAChB,SAAKT,QAAL,GAAgB,IAAIU,QAAJ,EAAhB;AACA,UAAMjC,MAAM,GAAG,KAAK2B,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwB7B,MAAvC;AACA,SAAKD,IAAL,CAAUC,MAAV;AACH;;AA0FDkC,EAAAA,MAAM,GAAG;AACL,UAAM;AACF5B,MAAAA,EADE;AAEFG,MAAAA,KAFE;AAGFC,MAAAA,IAHE;AAIFL,MAAAA,iBAJE;AAKFF,MAAAA,KALE;AAMFW,MAAAA;AANE,QAOF,KAAKD,KAPT;;AASA,QAAIR,iBAAJ,EAAuB;AACnB,0BAAO,oBAAC,QAAD;AAAU,QAAA,EAAE,EAAG,SAAQX,eAAe,GAAGyC,IAAlB,CAAuB3B,GAAI,EAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAP;AACH;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAI,MAAA,SAAS,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BC,KAA3B,CADJ,eAGI;AACI,MAAA,SAAS,EAAC,oBADd;AAEI,MAAA,KAAK,EAAE;AAAE2B,QAAAA,OAAO,EAAEjC,KAAK,GAAG,EAAH,GAAQ;AAAxB,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIKA,KAJL,CAHJ,EAUKW,OAAO,gBACJ;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,CADI,GAKJ,EAfR,eAkBI;AACI,MAAA,KAAK,EAAE;AAAEuB,QAAAA,MAAM,EAAE,OAAV;AAAmBC,QAAAA,KAAK,EAAE;AAA1B,OADX;AAEI,MAAA,SAAS,EAAC,eAFd;AAGI,MAAA,GAAG,EAAG,GACFC,OAAO,CAACC,GAAR,CAAYC,iBACf,eAAcnC,EAAG,EALtB;AAMI,MAAA,OAAO,EAAEoC,CAAC,IAAKA,CAAC,CAACtB,MAAF,CAASuB,GAAT,GAAgB,GAAE/C,WAAY,EANjD;AAOI,MAAA,GAAG,EAAEa,KAPT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlBJ,EA6BS,KAAKsB,YAAL,CAAkBtB,KAAlB,EAAyBC,IAAzB,CA7BT,CADJ;AAiCH;;AA1K4B;;AA6KjC,eAAeb,QAAf","sourcesContent":["import React, { Component } from \"react\";\nimport { singlePost, update } from \"./apiPost\";\nimport { isAuthenticated } from \"../auth\";\nimport { Redirect } from \"react-router-dom\";\nimport DefaultPost from \"../images/avatar.jpg\";\n\nclass EditPost extends Component {\n    constructor() {\n        super();\n        this.state = {\n            id: \"\",\n            title: \"\",\n            body: \"\",\n            redirectToProfile: false,\n            error: \"\",\n            fileSize: 0,\n            loading: false\n        };\n    }\n\n    init = postId => {\n        singlePost(postId).then(data => {\n            if (data.error) {\n                this.setState({ redirectToProfile: true });\n            } else {\n                this.setState({\n                    id: data.postedBy._id,\n                    title: data.title,\n                    body: data.body,\n                    error: \"\"\n                });\n            }\n        });\n    };\n\n    componentDidMount() {\n        this.postData = new FormData();\n        const postId = this.props.match.params.postId;\n        this.init(postId);\n    }\n\n    isValid = () => {\n        const { title, body, fileSize } = this.state;\n        if (fileSize > 1000000) {\n            this.setState({\n                error: \"File size should be less than 100kb\",\n                loading: false\n            });\n            return false;\n        }\n        if (title.length === 0 || body.length === 0) {\n            this.setState({ error: \"All fields are required\", loading: false });\n            return false;\n        }\n        return true;\n    };\n\n    handleChange = name => event => {\n        this.setState({ error: \"\" });\n        const value =\n            name === \"photo\" ? event.target.files[0] : event.target.value;\n\n        const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n        this.postData.set(name, value);\n        this.setState({ [name]: value, fileSize });\n    };\n\n    clickSubmit = event => {\n        event.preventDefault();\n        this.setState({ loading: true });\n\n        if (this.isValid()) {\n            const postId = this.props.match.params.postId;\n            const token = isAuthenticated().token;\n\n            update(postId, token, this.postData).then(data => {\n                if (data.error) this.setState({ error: data.error });\n                else {\n                    this.setState({\n                        loading: false,\n                        title: \"\",\n                        body: \"\",\n                        redirectToProfile: true\n                    });\n                }\n            });\n        }\n    };\n\n    editPostForm = (title, body) => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Post Photo</label>\n                <input\n                    onChange={this.handleChange(\"photo\")}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    className=\"form-control\"\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Title</label>\n                <input\n                    onChange={this.handleChange(\"title\")}\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={title}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Body</label>\n                <textarea\n                    onChange={this.handleChange(\"body\")}\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={body}\n                />\n            </div>\n\n            <button\n                onClick={this.clickSubmit}\n                className=\"btn btn-raised btn-primary\"\n            >\n                Update Post\n            </button>\n        </form>\n    );\n\n    render() {\n        const {\n            id,\n            title,\n            body,\n            redirectToProfile,\n            error,\n            loading\n        } = this.state;\n\n        if (redirectToProfile) {\n            return <Redirect to={`/user/${isAuthenticated().user._id}`} />;\n        }\n\n        return (\n            <div className=\"container\">\n                <h2 className=\"mt-5 mb-5\">{title}</h2>\n\n                <div\n                    className=\"alert alert-danger\"\n                    style={{ display: error ? \"\" : \"none\" }}\n                >\n                    {error}\n                </div>\n\n                {loading ? (\n                    <div className=\"jumbotron text-center\">\n                        <h2>Loading...</h2>\n                    </div>\n                ) : (\n                    \"\"\n                )}\n\n                <img\n                    style={{ height: \"200px\", width: \"auto\" }}\n                    className=\"img-thumbnail\"\n                    src={`${\n                        process.env.REACT_APP_API_URL\n                    }/post/photo/${id}`}\n                    onError={i => (i.target.src = `${DefaultPost}`)}\n                    alt={title}\n                />\n\n                \n                    {this.editPostForm(title, body)}\n            </div>\n        );\n    }\n}\n\nexport default EditPost;"]},"metadata":{},"sourceType":"module"}