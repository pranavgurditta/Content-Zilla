{"ast":null,"code":"var _jsxFileName = \"/Users/yati/Desktop/react/react-front/src/post/NewPost.js\";\nimport React, { Component } from \"react\";\nimport { isAuthenticated } from \"../auth\";\nimport { create } from \"./apiPost\";\nimport { Redirect } from \"react-router-dom\";\n\nclass NewPost extends Component {\n  constructor() {\n    super();\n\n    this.isValid = () => {\n      const {\n        title,\n        body,\n        fileSize\n      } = this.state;\n\n      if (fileSize > 100000) {\n        this.setState({\n          error: \"File size should be less than 100kb\",\n          loading: false\n        });\n        return false;\n      }\n\n      if (title.length === 0 || body.length === 0) {\n        this.setState({\n          error: \"All fields are required\",\n          loading: false\n        });\n        return false;\n      }\n\n      return true;\n    };\n\n    this.handleChange = name => event => {\n      this.setState({\n        error: \"\"\n      });\n      const value = name === \"photo\" ? event.target.files[0] : event.target.value;\n      const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n      this.postData.set(name, value);\n      this.setState({\n        [name]: value,\n        fileSize\n      });\n    };\n\n    this.clickSubmit = event => {\n      event.preventDefault();\n      this.setState({\n        loading: true\n      });\n\n      if (this.isValid()) {\n        const userId = isAuthenticated().user._id;\n\n        const token = isAuthenticated().token;\n        create(userId, token, this.postData).then(data => {\n          if (data.error) this.setState({\n            error: data.error\n          });else {\n            this.setState({\n              loading: false,\n              title: \"\",\n              body: \"\",\n              redirectToProfile: true\n            });\n          }\n        });\n      }\n    };\n\n    this.newPostForm = (title, body) => /*#__PURE__*/React.createElement(\"form\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }\n    }, \"Post Photo\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange(\"photo\"),\n      type: \"file\",\n      accept: \"image/*\",\n      className: \"form-control\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }\n    }, \"Title\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleChange(\"title\"),\n      type: \"text\",\n      className: \"form-control\",\n      value: title,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"form-group\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      className: \"text-muted\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }\n    }, \"Body\"), /*#__PURE__*/React.createElement(\"textarea\", {\n      onChange: this.handleChange(\"body\"),\n      type: \"text\",\n      className: \"form-control\",\n      value: body,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.clickSubmit,\n      className: \"btn btn-raised btn-primary\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }\n    }, \"Create Post\"));\n\n    this.state = {\n      title: \"\",\n      body: \"\",\n      photo: \"\",\n      error: \"\",\n      user: {},\n      fileSize: 0,\n      loading: false,\n      redirectToProfile: false\n    };\n  }\n\n  componentDidMount() {\n    this.postData = new FormData();\n    this.setState({\n      user: isAuthenticated().user\n    });\n  }\n\n  render() {\n    const {\n      title,\n      body,\n      photo,\n      user,\n      error,\n      loading,\n      redirectToProfile\n    } = this.state;\n\n    if (redirectToProfile) {\n      return /*#__PURE__*/React.createElement(Redirect, {\n        to: `/user/${user._id}`,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 20\n        }\n      });\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      className: \"mt-5 mb-5\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 17\n      }\n    }, \"Create a new post\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"alert alert-danger\",\n      style: {\n        display: error ? \"\" : \"none\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    }, error), loading ? /*#__PURE__*/React.createElement(\"div\", {\n      className: \"jumbotron text-center\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 25\n      }\n    }, \"Loading...\")) : \"\", this.newPostForm(title, body));\n  }\n\n}\n\nexport default NewPost;","map":{"version":3,"sources":["/Users/yati/Desktop/react/react-front/src/post/NewPost.js"],"names":["React","Component","isAuthenticated","create","Redirect","NewPost","constructor","isValid","title","body","fileSize","state","setState","error","loading","length","handleChange","name","event","value","target","files","size","postData","set","clickSubmit","preventDefault","userId","user","_id","token","then","data","redirectToProfile","newPostForm","photo","componentDidMount","FormData","render","display"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport { isAuthenticated } from \"../auth\";\nimport { create } from \"./apiPost\";\nimport { Redirect } from \"react-router-dom\";\n\nclass NewPost extends Component {\n    constructor() {\n        super();\n        this.state = {\n            title: \"\",\n            body: \"\",\n            photo: \"\",\n            error: \"\",\n            user: {},\n            fileSize: 0,\n            loading: false,\n            redirectToProfile: false\n        };\n    }\n\n    componentDidMount() {\n        this.postData = new FormData();\n        this.setState({ user: isAuthenticated().user });\n    }\n\n    isValid = () => {\n        const { title, body, fileSize } = this.state;\n        if (fileSize > 100000) {\n            this.setState({\n                error: \"File size should be less than 100kb\",\n                loading: false\n            });\n            return false;\n        }\n        if (title.length === 0 || body.length === 0) {\n            this.setState({ error: \"All fields are required\", loading: false });\n            return false;\n        }\n        return true;\n    };\n\n    handleChange = name => event => {\n        this.setState({ error: \"\" });\n        const value =\n            name === \"photo\" ? event.target.files[0] : event.target.value;\n\n        const fileSize = name === \"photo\" ? event.target.files[0].size : 0;\n        this.postData.set(name, value);\n        this.setState({ [name]: value, fileSize });\n    };\n\n    clickSubmit = event => {\n        event.preventDefault();\n        this.setState({ loading: true });\n\n        if (this.isValid()) {\n            const userId = isAuthenticated().user._id;\n            const token = isAuthenticated().token;\n\n            create(userId, token, this.postData).then(data => {\n                if (data.error) this.setState({ error: data.error });\n                else {\n                    this.setState({\n                        loading: false,\n                        title: \"\",\n                        body: \"\",\n                        redirectToProfile: true\n                    });\n                }\n            });\n        }\n    };\n\n    newPostForm = (title, body) => (\n        <form>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Post Photo</label>\n                <input\n                    onChange={this.handleChange(\"photo\")}\n                    type=\"file\"\n                    accept=\"image/*\"\n                    className=\"form-control\"\n                />\n            </div>\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Title</label>\n                <input\n                    onChange={this.handleChange(\"title\")}\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={title}\n                />\n            </div>\n\n            <div className=\"form-group\">\n                <label className=\"text-muted\">Body</label>\n                <textarea\n                    onChange={this.handleChange(\"body\")}\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={body}\n                />\n            </div>\n\n            <button\n                onClick={this.clickSubmit}\n                className=\"btn btn-raised btn-primary\"\n            >\n                Create Post\n            </button>\n        </form>\n    );\n\n    render() {\n        const {\n            title,\n            body,\n            photo,\n            user,\n            error,\n            loading,\n            redirectToProfile\n        } = this.state;\n\n        if (redirectToProfile) {\n            return <Redirect to={`/user/${user._id}`} />;\n        }\n\n        return (\n            <div className=\"container\">\n                <h2 className=\"mt-5 mb-5\">Create a new post</h2>\n                <div\n                    className=\"alert alert-danger\"\n                    style={{ display: error ? \"\" : \"none\" }}\n                >\n                    {error}\n                </div>\n\n                {loading ? (\n                    <div className=\"jumbotron text-center\">\n                        <h2>Loading...</h2>\n                    </div>\n                ) : (\n                    \"\"\n                )}\n\n                {this.newPostForm(title, body)}\n            </div>\n        );\n    }\n}\n\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}